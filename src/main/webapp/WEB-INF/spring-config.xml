<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				http://www.springframework.org/schema/tx 
		        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		        http://www.springframework.org/schema/context 
		        http://www.springframework.org/schema/context/spring-context-3.0.xsd" default-autowire="byName">
		        

	<!-- NOMBRE ORIGINAL DE ESTE ARCHIVO applicationContext.xml En este archivo 
		se define todo lo que esta en el contexto de nuestra aplicación spring. -->

	<!-- DECLARACION DE BEANS, SERVICIOS Y DAO PARA QUE ESTEN DISPONIBLES EN 
		EL CONTEXTO DE SPRING -->

	<context:annotation-config />	
	
	<!-- ***************** OPCION A ************************** -->
	<!-- opcion ol school que es ir anotandolos uno por uno -->
					
					<!-- DESHABILITADA -->
<!-- 	
	<bean id="User" class="com.otv.model.User" />

	<bean id="UserService" class="com.otv.services.UserServiceImpl">
		<property name="userDAO" ref="UserDAO" />
	</bean>

	<bean id="UserDAO" class="com.otv.dao.UserDAOImpl">
		<property name="sessionFactory" ref="SessionFactory" />
	</bean>

	<bean id="LoginService" class="com.otv.services.LoginServiceImpl">
		<property name="loginDAO" ref="LoginDAO" />
	</bean>

	<bean id="LoginDAO" class="com.otv.dao.LoginDAOImpl">
		<property name="sessionFactory" ref="SessionFactory" />
	</bean>
 -->
	<!-- ***************** OPCION B ************************** -->
	<!-- opcion new school que es declarar un paquete que sea escaneado y añades 
		un filtro para el tipo de etiqueta a escanear -->
		
	
	<context:component-scan base-package="com.otv.dao"/>
	<context:component-scan base-package="com.otv.services"/>
	<context:component-scan base-package="com.otv.controller"/>
	<context:component-scan base-package="com.otv.controller.springBeans"/>


	<!-- CON ESTA ETIQUETA YA NO HAY QUE HACER EL AUTOWIRED ni en old ni en 
		new school, SE PUEDEN USAR ANOTACIONES EN LAS CLASES. -->
<!-- 	<context:annotation-config /> -->
	<!-- Autowired es una forma de inyectar dependencias de Spring -->



<!-- PATH A LA BASE DE DATOS En casa es esta
	<bean id="DataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="net.sourceforge.jtds.jdbc.Driver" />
		<property name="url"
			value="jdbc:jtds:sqlserver://localhost:1433/Test;instance=SQLEXPRESS" />
		<property name="username" value="DjNezhod" />
		<property name="password" value="nezhio" />
	</bean>
 -->
 
<!-- PATH A LA BASE DE DATOS En el curro es esta -->
	<bean id="DataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="net.sourceforge.jtds.jdbc.Driver" />
		<property name="url"
			value="jdbc:jtds:sqlserver://10.0.0.168:1433/Test;instance=MSSQLSERVER" />
		<property name="username" value="sa" />
		<property name="password" value="cystelcom" />
	</bean>

	<!-- Session Factory Declaration -->
	<bean id="SessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="DataSource" />
		<property name="packagesToScan">
		    <list>
		        <value>com.otv.model</value>
		    </list>
		</property>

		<property name="hibernateProperties">
			<props>

				<prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<!-- esta propiedad tiene 3 valores interesantes, hbm2ddl.auto: -->
				<!-- si pones "create", te crea todo de cero, machaca. -->
				<!-- con "validate" te lo respeta, simplemente comprueba errors. -->
				<!-- con "update" deberia actualizar y generar lo que no exista. -->
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">create</prop> -->
			</props>
		</property>
	</bean>

	<!-- Enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- Transaction Manager is defined -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="SessionFactory" />
	</bean>

</beans>
